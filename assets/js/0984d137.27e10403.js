"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[1238],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6121:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={sidebar_position:3},s="Checkov",u={unversionedId:"security/checkov",id:"security/checkov",title:"Checkov",description:"We scan infrastructure-as-code with Checkov.",source:"@site/docs/security/checkov.md",sourceDirName:"security",slug:"/security/checkov",permalink:"/docs/security/checkov",draft:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/security/checkov.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Trivy",permalink:"/docs/security/trivy"},next:{title:"How to use GitguardianShield",permalink:"/docs/security/GitguardianShield"}},l={},p=[],d={toc:p};function f(e){var t=e.components,c=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checkov"},"Checkov"),(0,a.kt)("p",null,"We scan ",(0,a.kt)("strong",{parentName:"p"},"infrastructure-as-code")," with Checkov."),(0,a.kt)("p",null,"Add the following GitHub action ",(0,a.kt)("em",{parentName:"p"},"checkov.yml")," to your repository workflows."),(0,a.kt)("p",null,"Depending on where the infrastructure-as-code is located, the path to your infrastructure-as-code can be specified under ",(0,a.kt)("inlineCode",{parentName:"p"},"directory")," - this is optional."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Low severity checks can be skipped with ",(0,a.kt)("inlineCode",{parentName:"p"},"skip_check"),"."),(0,a.kt)("p",{parentName:"div"},(0,a.kt)("img",{alt:"checkov-id.png",src:n(9126).Z,width:"821",height:"470"})))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'name: "Checkov"\n\non:\n  push:\n    branches: [main, master]\n  # pull_request:\n  # The branches below must be a subset of the branches above\n  # branches: [ main, master ]\n  # paths-ignore:\n  #   - "**/*.md"\n  #   - "**/*.txt"\n  schedule:\n    - cron: "0 0 * * *"\n  workflow_dispatch:\n\njobs:\n  analyze:\n    runs-on: ubuntu-latest\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n\n    name: checkov-action\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@master\n\n      - name: Run Checkov action\n        id: checkov\n        uses: bridgecrewio/checkov-action@master\n        with:\n          directory: . # optional: specify path to your infrastructure-as-code\n          quiet: true # optional: display only failed checks\n          soft_fail: false # optional: do not return an error code if there are failed checks\n          framework: all # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}\n          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif\n          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry\n          log_level: WARNING # optional: set log level. Default WARNING\n          skip_check: CKV_DOCKER_2,CKV_K8S_8,CKV_SECRET_6,CKV_K8S_21,CKV_K8S_37,CKV_K8S_28,CKV_K8S_9,CKV_K8S_43,CKV_K8S_15,CKV_K8S_35,CKV_K8S_38,CKV_K8S_22,CKV_K8S_40,CKV_K8S_31 # optional: add low severity checkov rule IDs\n\n      - name: Upload Checkov scan results to GitHub Security tab\n        uses: github/codeql-action/upload-sarif@v1\n        if: always()\n        with:\n          sarif_file: "results.sarif"\n')))}f.isMDXComponent=!0},9126:function(e,t,n){t.Z=n.p+"assets/images/checkov-id-ec7269b949a52499fb8413c5400cb4fb.png"}}]);