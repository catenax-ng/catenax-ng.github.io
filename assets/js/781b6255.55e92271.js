"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[9867],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return r?a.createElement(h,i(i({ref:t},u),{},{components:r})):a.createElement(h,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9113:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={title:"TRG 5.01 - HELM Chart requirements"},i=void 0,o={unversionedId:"trg/trg-5/trg-5-1",id:"trg/trg-5/trg-5-1",title:"TRG 5.01 - HELM Chart requirements",description:"| Author               | Status | Created      | Post-History |",source:"@site/docs/trg/trg-5/trg-5-1.md",sourceDirName:"trg/trg-5",slug:"/trg/trg-5/trg-5-1",permalink:"/docs/trg/trg-5/trg-5-1",draft:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/trg/trg-5/trg-5-1.md",tags:[],version:"current",frontMatter:{title:"TRG 5.01 - HELM Chart requirements"},sidebar:"tutorialSidebar",previous:{title:"TRG 4.04 - Container registries",permalink:"/docs/trg/trg-4/trg-4-5"},next:{title:"TRG 5.02 - Chart structure",permalink:"/docs/trg/trg-5/trg-5-2"}},s={},p=[{value:"Description",id:"description",level:2},{value:"Why",id:"why",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Author"),(0,n.kt)("th",{parentName:"tr",align:null},"Status"),(0,n.kt)("th",{parentName:"tr",align:null},"Created"),(0,n.kt)("th",{parentName:"tr",align:null},"Post-History"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,n.kt)("td",{parentName:"tr",align:null},"Draft"),(0,n.kt)("td",{parentName:"tr",align:null},"14-Sept-2022"),(0,n.kt)("td",{parentName:"tr",align:null},"n/a")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,n.kt)("td",{parentName:"tr",align:null},"Draft"),(0,n.kt)("td",{parentName:"tr",align:null},"28-Sept-2022"),(0,n.kt)("td",{parentName:"tr",align:null},"n/a")))),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"All Catena-X/ Tractus-X components must be installable via HELM and meet following requirements:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"HELM Chart must be released"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("em",{parentName:"li"},"index.yaml")," that contains the Helm Chart must be publicly available"),(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("em",{parentName:"li"},"values.yaml")," file with default values (no environment specific) should be present in the Chart"),(0,n.kt)("li",{parentName:"ul"},"The Chart should be installable via ",(0,n.kt)("em",{parentName:"li"},"helm install")," command without providing any value override"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("em",{parentName:"li"},"Chart.yaml")," should contain proper versioning, ",(0,n.kt)("em",{parentName:"li"},"version")," and ",(0,n.kt)("em",{parentName:"li"},"appVersion")," variables need to be set according to the official ",(0,n.kt)("a",{parentName:"li",href:"https://helm.sh/docs/topics/charts/#charts-and-versioning"},"documentation"))),(0,n.kt)("p",null,"We are also providing guides on the following Helm related topics:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/guides/how-to-be-part-of-release-umbrella-helm"},"How to be part of the Release Umbrella Helm Chart")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/guides/how-to-helm-dependency"},"How To Define Helm Chart Dependencies")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/guides/how-to-lint-and-test-your-helm-chart"},"How to lint and test your helm chart")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/guides/how-to-release-a-helm-chart"},"How to release a Helm chart"))),(0,n.kt)("h2",{id:"why"},"Why"),(0,n.kt)("p",null,"It is crucial to have a properly working Helm Chart for every product. The applications has to be installable without providing any overriding values, so they can be tested, deployed, included in ci/cd workflows, etc. All charts have to follow versioning rules, so everyone can have an easy understanding what chart version and application version (container tag) is being deployed."))}c.isMDXComponent=!0}}]);