"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[394],{2135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(5893),i=n(1151);const r={sidebar_position:6},o="How to integrate KICS",a={id:"security/how-to-integrate-kics",title:"How to integrate KICS",description:"We scan infrastructure-as-code with KICS.",source:"@site/docs/security/how-to-integrate-kics.md",sourceDirName:"security",slug:"/security/how-to-integrate-kics",permalink:"/docs/security/how-to-integrate-kics",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/security/how-to-integrate-kics.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"How to integrate GitGuardianShield",permalink:"/docs/security/how-to-integrate-gitguardianshield"},next:{title:"FOSS Guides (moved)",permalink:"/docs/foss"}},c={},d=[];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"how-to-integrate-kics",children:"How to integrate KICS"}),"\n",(0,s.jsxs)(t.p,{children:["We scan ",(0,s.jsx)(t.strong,{children:"infrastructure-as-code"})," with KICS."]}),"\n",(0,s.jsxs)(t.p,{children:["If your repo does not yet include ",(0,s.jsx)(t.code,{children:"kics.yml"})," or this GitHub action, add this action to your repository workflows."]}),"\n",(0,s.jsx)(t.p,{children:"KICS is used as the successor to Checkov."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Findings with severity ",(0,s.jsx)(t.code,{children:"Error"})," are high findings and must be fixed."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'name: "KICS"\n\non:\n  push:\n    branches: [main, master]\n  # pull_request:\n  # The branches below must be a subset of the branches above\n  # branches: [main, master]\n  # paths-ignore:\n  #   - "**/*.md"\n  #   - "**/*.txt"\n  schedule:\n    - cron: "0 0 * * *"\n  workflow_dispatch:\n\njobs:\n  analyze:\n    name: Analyze\n    runs-on: ubuntu-latest\n    permissions:\n      actions: read\n      contents: read\n      security-events: write\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: KICS scan\n        uses: checkmarx/kics-github-action@master\n        with:\n          # Scanning directory .\n          path: "."\n          # Exclude paths from scan by providing the paths as comma separated list\n          # exclude_paths: "postgres-init.yaml,templates/sharedidp.yaml"\n          # Exclude queries by providing the query / rule ID as comma separated list\n          # exclude_queries: "b9c83569-459b-4110-8f79-6305aa33cb37"\n          # Fail on HIGH severity results\n          fail_on: high\n          # Disable secrets detection - we use GitGuardian\n          disable_secrets: true\n          # When provided with a directory on output_path\n          # it will generate the specified reports file named \'results.{extension}\'\n          # in this example it will generate:\n          # - results-dir/results.json and results-dir/results.sarif\n          output_path: kicsResults/\n          output_formats: "json,sarif"\n\n      # Upload findings to GitHub Advanced Security Dashboard\n      - name: Upload SARIF file for GitHub Advanced Security Dashboard\n        if: always()\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: kicsResults/results.sarif\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var s=n(7294);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);