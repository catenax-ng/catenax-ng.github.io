"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[8929],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(n),h=o,f=d["".concat(p,".").concat(h)]||d[h]||l[h]||i;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3464:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return l}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],a={title:"How to expose your app to the internet"},p=void 0,u={unversionedId:"guides/how-to-expose-an-app-to-the-internet",id:"guides/how-to-expose-an-app-to-the-internet",title:"How to expose your app to the internet",description:"By default, the pods you create in a kubernetes cluster are not exposed to the outside of the cluster. If you want to",source:"@site/docs/guides/how-to-expose-an-app-to-the-internet.md",sourceDirName:"guides",slug:"/guides/how-to-expose-an-app-to-the-internet",permalink:"/docs/guides/how-to-expose-an-app-to-the-internet",editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/guides/how-to-expose-an-app-to-the-internet.md",tags:[],version:"current",frontMatter:{title:"How to expose your app to the internet"},sidebar:"tutorialSidebar",previous:{title:"How to deploy an application on 'Hotel Budapest'",permalink:"/docs/guides/how-to-deploy-an-application"},next:{title:"How To Define Helm Chart Dependencies",permalink:"/docs/guides/how-to-helm-dependency"}},c={},l=[{value:"Catena-X kubernetes cluster setup",id:"catena-x-kubernetes-cluster-setup",level:2},{value:"Defining your ingress definition (with helm)",id:"defining-your-ingress-definition-with-helm",level:2}],d={toc:l};function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"By default, the pods you create in a kubernetes cluster are not exposed to the outside of the cluster. If you want to\nmake your application accessible through the internet, you can specify\nan ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/"},"ingress definition"),". Ingress definitions that are\napplied to a kubernetes cluster, are picked up by\nan ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/"},"ingress controller"),", which will route\ntraffic from the entrypoint to your services and/or pods. The ingress controller usually only exists once on a cluster\nand can manage multiple ingress definitions provided by you."),(0,i.kt)("h2",{id:"catena-x-kubernetes-cluster-setup"},"Catena-X kubernetes cluster setup"),(0,i.kt)("p",null,"All the kubernetes clusters provided as demonstration environments at Catena-X already come\nwith ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/"},"ingress-nginx"),"\nas ingress controller installed."),(0,i.kt)("p",null,"For proper TLS setup, ",(0,i.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/"},"cert-manager")," is used to provide your application with\ncertificates issued by ",(0,i.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"Let's Encrypt"),"."),(0,i.kt)("h2",{id:"defining-your-ingress-definition-with-helm"},"Defining your ingress definition (with helm)"),(0,i.kt)("p",null,"Typically, you would add the ingress definition for your app to your helm chart. The following example can be used as a\ntemplate:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'{{- if .Values.ingress.enabled -}}\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  # name of the ingress resource. -ingress suffix as suggestion for clear naming convention\n  name: {{ .Values.appName }}-ingress\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"\n    nginx.ingress.kubernetes.io/ssl-passthrough: "true"\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"\nspec:\n  rules:\n    # IMPORTANT: specifies the entrypoint (domain), myApp will be accessible from\n    - host: {{ .Values.appName }}.{{ .Values.environment }}.demo.catena-x.net\n      http:\n        paths:\n          # specific path the app should be reachable on the host\n          # complete URL for the app consists of host AND path\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                # Name of the service, the ingress controller should route the traffic to, if the host/path combination is called\n                # Adjust that to your service name\n                name: my-k8s-service\n                port:\n                  # Port number, the kubernetes service is listening on\n                  # Adjust that to your services\' port\n                  number: 8080\n\n  # Config for creating proper TLS certificates host has to match the one from the ingress rule\n  tls:\n    - hosts:\n        - {{ .Values.appName }}.{{ .Values.environment }}.demo.catena-x.net\n      # Default secret for certificate creation already provided to your namespace\n      secretName: tls-secret\n{{- end }}\n')),(0,i.kt)("p",null,"A values.yaml used for this template could look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'appName: "my-app"\nenvironment: "dev"\n\ningress:\n  enabled: true\n')))}h.isMDXComponent=!0}}]);