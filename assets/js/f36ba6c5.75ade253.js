"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[6073],{3152:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=i(5893),s=i(1151);const r={sidebar_position:5},o="How to integrate GitGuardianShield",l={id:"security/how-to-integrate-gitguardianshield",title:"How to integrate GitGuardianShield",description:"GitGuardianShield is a CLI application that runs in your local environment to detect secrets and block them before they",source:"@site/docs/security/how-to-integrate-gitguardianshield.md",sourceDirName:"security",slug:"/security/how-to-integrate-gitguardianshield",permalink:"/docs/security/how-to-integrate-gitguardianshield",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/security/how-to-integrate-gitguardianshield.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"How to integrate Trivy",permalink:"/docs/security/how-to-integrate-trivy"},next:{title:"How to integrate KICS",permalink:"/docs/security/how-to-integrate-kics"}},a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Login",id:"login",level:2},{value:"Local Scanning",id:"local-scanning",level:2},{value:"Integration",id:"integration",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Pre-commit",id:"pre-commit",level:3},{value:"Steps",id:"steps",level:4},{value:"Pre-push",id:"pre-push",level:3},{value:"Steps",id:"steps-1",level:4}];function h(e){const n={admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"how-to-integrate-gitguardianshield",children:"How to integrate GitGuardianShield"}),"\n",(0,t.jsxs)(n.p,{children:["GitGuardianShield is a CLI application that runs in your local environment to detect secrets and block them before they\nenter the git repository. Using a hook ",(0,t.jsx)(n.strong,{children:"pre-commit"}),"/",(0,t.jsx)(n.strong,{children:"pre-push"})," the secret scans can be automated."]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Python and Pip"}),"\n",(0,t.jsx)(n.li,{children:"GitGuardian account"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"Execute the following CLI:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"pip install ggshield"})}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["If this doesn't work, try ",(0,t.jsx)(n.code,{children:"pip3 install ggshield"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"login",children:"Login"}),"\n",(0,t.jsxs)(n.p,{children:["To use GitGuardianshield you need to be authentified by the GitGuardian Server. For this, execute ",(0,t.jsx)(n.code,{children:"ggshield auth login"}),".\nThis automatically generates an access token."]}),"\n",(0,t.jsx)(n.h2,{id:"local-scanning",children:"Local Scanning"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To scan a file use the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:'ggshield secret scan path "Name of File"'})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To scan a directory use the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"ggshield secret scan path -r ."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To scan every changes that have been staged in a git repo (pre-commit) use the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"ggshield secret scan pre-commit"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To scan all commits in a git repository use the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"ggshield secret scan repo ."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To ignore the last fund secrets use the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"ggshield ignore --last-found"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To ignore a path add to the ",(0,t.jsx)(n.strong,{children:"gitguardian.yaml File"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"paths-ignore:\n'**/folder-path/**'\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["To ignore selected files add to the ",(0,t.jsx)(n.strong,{children:"gitguardian.yaml File"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"paths-ignore:\n'**/file-path'\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["Install pre-commit with the ",(0,t.jsx)(n.strong,{children:"CLI"})," ",(0,t.jsx)(n.code,{children:"pip install pre-commit"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"pre-commit",children:"Pre-commit"}),"\n",(0,t.jsx)(n.p,{children:"The pre-commit hook checks the commit for secrets and blocks the commit if there are any. The pre-commit hook is easier\nto work with since it catches the error as you made it. An internet connection will be required for the commits."}),"\n",(0,t.jsx)(n.h4,{id:"steps",children:"Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.em,{children:"pre-commit-config.yaml"})," file in your root repo:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"repos:\n  - repo: https://github.com/gitguardian/ggshield\n    rev: v1.10.7 (latest version)\n    hooks:\n      - id: ggshield\n        language_version: python3\n        stage: [commit]\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Install a githook based on the yaml file with the CLI:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"pre-commit install"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pre-push",children:"Pre-push"}),"\n",(0,t.jsx)(n.p,{children:"The pre-push checks a group of commits for secrets, and block the push if there are any. The pre-push hook reduces the\namount of scanning but if a secret is detected, you have to rewrite your history."}),"\n",(0,t.jsx)(n.h4,{id:"steps-1",children:"Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.em,{children:"pre-commit-config.yaml"})," file in your root repo:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"repos:\n  - repo: https://github.com/gitguardian/ggshield\n    rev: v1.10.7 (latest version)\n    hooks:\n      - id: ggshield-push\n        language_version: python3\n        stage: [push]\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Install a githook based on the yaml file with the ",(0,t.jsx)(n.strong,{children:"CLI"}),":",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"pre-commit install --hook-type pre-push"})]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var t=i(7294);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);